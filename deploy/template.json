{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "analysisServicesServerName": {
      "type": "string",
      "defaultValue": "[concat('aas', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the Azure Analysis Services server to create. Server name must begin with a letter, be lowercase alphanumeric, and between 3 and 63 characters in length. Server name must be unique per region."
      }
    },
    "analysisServicesDatabaseName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Analysis Services database (model) that needs to be refreshed."
      }
    },
    "servicePrincipalApplicationId": {
      "type": "string",
      "metadata": {
        "description": "The application ID (also called client ID) for the service principal that will interact with Azure Analysis Services."
      }
    },
    "servicePrincipalObjectId": {
      "type": "string",
      "metadata": {
        "description": "The object ID for the service principal that will interact with Azure Analysis Services."
      }
    },
    "servicePrincipalClientSecret": {
      "type": "securestring",
      "metadata": {
        "description": "The client secret for the service principal that will interact with Azure Analysis Services."
      }
    },
    "servicePrincipalTenantId": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "The Azure AD tenant ID in which the service principal is located."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]",
      "metadata": {
        "description": "The name of the Azure Storage account to create, which will be used for storing metadata for the Azure Functions app. App name must be globally unique."
      }
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "[uniqueString(resourceGroup().id)]",
      "metadata": {
        "description": "The name of the Azure Functions app to create. The app name must be globally unique."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location of all resources."
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "The type of Azure Storage account to create for the Azure Functions host to use."
      }
    },
    "analysisServicesSkuName": {
      "type": "string",
      "defaultValue": "S0",
      "metadata": {
        "description": "The SKU name of the Azure Analysis Services server to create."
      }
    },
    "analysisServicesCapacity": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "The total number of query replica scale-out instances to create for the Azure Analysis Services server."
      }
    },
    "appServicePlanSku": {
      "type": "string",
      "defaultValue": "S1",
      "metadata": {
        "description": "The SKU name of the app service plan to create."
      }
    }
  },
  "variables": {
    "appServicePlanName": "FunctionsPlan",
    "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
    "ownerRoleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
    "analysisServicesDeploymentName": "analysis-services-deployment"
  },
  "resources": [
    // Storage account for function app
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "apiVersion": "2019-04-01",
      "location": "[parameters('location')]",
      "kind": "StorageV2",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      }
    },

    // Function app
    {
      "name": "[variables('appServicePlanName')]",
      "type": "Microsoft.Web/serverFarms",
      "location": "[parameters('location')]",
      "apiVersion": "2018-02-01",
      "kind": "app",
      "sku": {
        "name": "[parameters('appServicePlanSku')]"
      }
    },
    {
      "name": "[parameters('functionAppName')]",
      "type": "Microsoft.Web/sites",
      "apiVersion": "2015-08-01",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "alwaysOn": true
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "[resourceId('Microsoft.Web/serverFarms', variables('appServicePlanName'))]"
      ]
    },

    // Analysis Services instance, with firewall rule allowing Azure Function to access
    {
      "name": "[variables('analysisServicesDeploymentName')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-05-01",
      "properties": {
        "mode": "Incremental",
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "parameters": {
          "analysisServicesServerName": {
            "value": "[parameters('analysisServicesServerName')]"
          },
          "location": {
            "value": "[parameters('location')]"
          },
          "analysisServicesSkuName": {
            "value": "[parameters('analysisServicesSkuName')]"
          },
          "analysisServicesCapacity": {
            "value": "[parameters('analysisServicesCapacity')]"
          },
          "analysisServicesFirewallIPAddresses": {
            "value": "[split(reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2018-02-01').possibleOutboundIpAddresses, ',')]"
          },
          "servicePrincipalApplicationId": {
            "value": "[parameters('servicePrincipalApplicationId')]"
          },
          "servicePrincipalTenantId": {
            "value": "[parameters('servicePrincipalTenantId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "analysisServicesServerName": {
              "type": "string"
            },
            "location": {
              "type": "string"
            },
            "analysisServicesSkuName": {
              "type": "string"
            },
            "analysisServicesCapacity": {
              "type": "int"
            },
            "analysisServicesFirewallIPAddresses": {
              "type": "array"
            },
            "servicePrincipalApplicationId": {
              "type": "string"
            },
            "servicePrincipalTenantId": {
              "type": "string"
            }
          },
          "variables": {
            "copy": [
              {
                "name": "firewallRules",
                "count": "[length(parameters('analysisServicesFirewallIPAddresses'))]",
                "input": {
                  "firewallRuleName": "[concat('Allow-Function-', copyIndex('firewallRules'))]",
                  "rangeStart": "[parameters('analysisServicesFirewallIPAddresses')[copyIndex('firewallRules')]]",
                  "rangeEnd": "[parameters('analysisServicesFirewallIPAddresses')[copyIndex('firewallRules')]]"
                }
              }
            ]
          },
          "resources": [
            {
              "name": "[parameters('analysisServicesServerName')]",
              "type": "Microsoft.AnalysisServices/servers",
              "apiVersion": "2017-08-01",
              "location": "[parameters('location')]",
              "sku": {
                "name": "[parameters('analysisServicesSkuName')]",
                "capacity": "[parameters('analysisServicesCapacity')]"
              },
              "properties": {
                "ipV4FirewallSettings": {
                  "firewallRules": "[variables('firewallRules')]",
                  "enablePowerBIService": true
                },
                "asAdministrators": {
                  "members": [
                    "[concat('app:', parameters('servicePrincipalApplicationId'), '@', parameters('servicePrincipalTenantId'))]"
                  ]
                }
              }
            }
          ],
          "outputs": {
            "serverFullName": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.AnalysisServices/servers', parameters('analysisServicesServerName')), '2017-08-01').serverFullName]"
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
      ]
    },
    {
      "name": "[concat(parameters('analysisServicesServerName'), '/Microsoft.Authorization/', guid(resourceGroup().id))]",
      "type": "Microsoft.AnalysisServices/servers/providers/roleAssignments",
      "apiVersion": "2018-09-01-preview",
      "properties": {
        "roleDefinitionId": "[variables('ownerRoleDefinitionId')]",
        "principalId": "[parameters('servicePrincipalObjectId')]"
      },
      "dependsOn": [
        "[variables('analysisServicesDeploymentName')]",
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
      ]
    },

    // Azure Functions app configuration
    {
      "name": "[concat(parameters('functionAppName'), '/appsettings')]",  
      "type": "Microsoft.Web/sites/config",
      "apiVersion": "2018-11-01",
      "properties": {
          "AzureWebJobsDashboard": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
          "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
          "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]",
          "WEBSITE_CONTENTSHARE": "[toLower(parameters('functionAppName'))]",
          "FUNCTIONS_EXTENSION_VERSION": "~2",
          "FUNCTIONS_WORKER_RUNTIME": "PowerShell",
          "AnalysisServicesServerUri": "[reference(resourceId('Microsoft.Resources/deployments', variables('analysisServicesDeploymentName'))).outputs.serverFullName.value]",
          "AnalysisServicesServerName": "[parameters('analysisServicesServerName')]",
          "AnalysisServicesDatabaseName": "[parameters('analysisServicesDatabaseName')]",
          "ServicePrincipalApplicationId": "[parameters('servicePrincipalApplicationId')]",
          "ServicePrincipalClientSecret": "[parameters('servicePrincipalClientSecret')]",
          "ServicePrincipalTenantId": "[parameters('servicePrincipalTenantId')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
        "[variables('analysisServicesDeploymentName')]"
      ]
    }
  ],
  "outputs": {
    "functionsAppName": {
      "type": "string",
      "value": "[parameters('functionAppName')]"
    }
  }
}
